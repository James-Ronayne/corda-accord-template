repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://software.r3.com/artifactory/corda' }
    maven { url 'https://jitpack.io' }
    // needed for gradle-tooling-api dependency in node-driver-api
    maven { url 'https://repo.gradle.org/gradle/libs-releases-local/' }
}

apply plugin: 'kotlin'
apply plugin: 'idea'
apply plugin: 'net.corda.plugins.cordapp'
apply plugin: 'net.corda.plugins.cordformation'
apply plugin: 'net.corda.plugins.quasar-utils'
apply plugin: 'maven-publish'

sourceSets {
    main {
        resources {
            srcDir "../config/dev"
        }
    }
    test {
        resources {
            srcDir "../config/test"
        }
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testCompile "junit:junit:$junit_version"

    // Corda dependencies.
    cordaCompile "$corda_core_release_group:corda-core:$corda_core_release_version"
    cordaCompile "$corda_core_release_group:corda-jackson:$corda_release_version"
    cordaRuntime "$corda_release_group:corda:$corda_release_version"
    cordaRuntime "$corda_release_group:corda-node-api:$corda_release_version"
    testCompile "$corda_release_group:corda-node-driver:$corda_release_version"

    cordaCompile "$corda_release_group:corda-finance-contracts:$corda_release_version"
    cordaCompile "$corda_release_group:corda-finance-workflows:$corda_release_version"

    compile "io.cordite.braid:braid-corda:$braid_version"
    compile "commons-io:commons-io:$commons_io_version"
    compile "javax.json:javax.json-api:$json_api_version"

    // CorDapp dependencies
    // Specify your cordapp's dependencies below, including dependent CorDapps
    cordapp "$corda_release_group:corda-finance-contracts:$corda_release_version"
    cordapp "$corda_release_group:corda-finance-workflows:$corda_release_version"
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        languageVersion = "1.2"
        apiVersion = "1.2"
        jvmTarget = "1.8"
        javaParameters = true   // Useful for reflection.
    }
}

def rpcUsersList = [
        ['username' : "user1",
         'password' : "password",
         'permissions' : ["ALL"]]
]

task deployNodes(type: net.corda.plugins.Cordform, dependsOn: ['jar']) {
    delete "./build/nodes"
    directory "./build/nodes"

    signing {
        enabled false
    }

    nodeDefaults {
        cordapp("$corda_release_group:corda-finance-contracts:$corda_release_version")
        cordapp("$corda_release_group:corda-finance-workflows:$corda_release_version")
    }

    node {
        name "O=Notary,L=London,C=GB"
        notary = [validating: false]
        p2pPort 10002
        projectCordapp {
            config "braid = 9003"
        }
        rpcSettings {
            useSsl false
            standAloneBroker false
            address "0.0.0.0:10003"
            adminAddress "0.0.0.0:10013"
        }
    }
    node {
        name "O=Daniel,L=NY,C=US"
        p2pPort 10004
        projectCordapp {
            config "braid = 9005"
        }
        rpcSettings {
            useSsl false
            standAloneBroker false
            address "0.0.0.0:10005"
            adminAddress "0.0.0.0:10015"
        }
        rpcUsers = rpcUsersList
    }
    node {
        name "O=Clause Inc., L=NY, C=US"
        p2pPort 10006
        projectCordapp {
            config "braid = 9007"
        }
        rpcSettings {
            useSsl false
            standAloneBroker false
            address "0.0.0.0:10007"
            adminAddress "0.0.0.0:10017"
        }
        rpcUsers = rpcUsersList
    }
    node {
        name "O=Jason,L=NY,C=US"
        p2pPort 10008
        projectCordapp {
            config "braid = 9009"
        }
        rpcSettings {
            useSsl false
            standAloneBroker false
            address "0.0.0.0:10009"
            adminAddress "0.0.0.0:10019"
        }
        rpcUsers = rpcUsersList
    }
    node {
        name "O=R3 LLC, L=NY, C=US"
        p2pPort 10010
        projectCordapp {
            config "braid = 90011"
        }
        rpcSettings {
            useSsl false
            standAloneBroker false
            address "0.0.0.0:10011"
            adminAddress "0.0.0.0:10021"
        }
        rpcUsers = rpcUsersList
    }
}

cordapp {
    signing {
        enabled false
    }
    targetPlatformVersion 4
    minimumPlatformVersion 3
    contract {
        name "Corda Training Material"
        vendor "R3"
        licence "Contact R3 for Kotlin Source Contract License."
        versionId 1
    }
    workflow {
        name "Corda Training Material"
        vendor "R3"
        licence "Contact R3 for Kotlin Source Workflow License."
        versionId 1
    }
}

idea {
    module {
        downloadJavadoc = true // defaults to false
        downloadSources = true
    }
}
